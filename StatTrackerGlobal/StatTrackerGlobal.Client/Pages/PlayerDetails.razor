@using StatTrackerGlobal.Shared
@using Fluxor
@using StatTrackerGlobal.App.ViewModels
@using StatTrackerGlobal.Client.Store
@using System.Collections.Immutable
@using static StatTrackerGlobal.App.ViewModels.SetOverviewViewModel

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IState<ViewState> ViewState
@inject IDispatcher Dispatcher

<h3 align="center">Stats for @SetPlayer.FirstName @SetPlayer.LastName</h3>
@if (this.isShowing) {
@if (SetPlayer.Position == "Libero" || SetPlayer.Position == "Defensive Specialist")
{
    <table align="center">
        <tr align="center">
            <th>Digs</th>
            <th>Ball Touched</th>
            <th>Ball Missed</th>
        </tr>
        <tr align="center">
            <td>@SetPlayer.PassStats.Digs</td>
            <td>@SetPlayer.PassStats.BallTouches</td>
            <td>@SetPlayer.PassStats.BallMisses</td>
        </tr>
        <tr align="center">
            <td>
                <button class="btn btn-primary" @onclick="IncrementDigs">+</button>
                <button class="btn btn-primary" @onclick="DecrementDigs">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementBallTouches">+</button>
                <button class="btn btn-primary" @onclick="DecrementBallTouches">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementBallMisses">+</button>
                <button class="btn btn-primary" @onclick="DecrementBallMisses">-</button>
            </td>
        </tr>
        <tr align="center">
            <th>Serves Made</th>
            <th>Serves Missed</th>
            <th>Aces</th>
        </tr>
        <tr align="center">
            <td>@SetPlayer.ServeStats.ServesMade</td>
            <td>@SetPlayer.ServeStats.ServesMissed</td>
            <td>@SetPlayer.ServeStats.Aces</td>
        </tr>
        <tr align="center">
            <td>
                <button class="btn btn-primary" @onclick="IncrementServesMade">+</button>
                <button class="btn btn-primary" @onclick="DecrementServesMade">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementServesMissed">+</button>
                <button class="btn btn-primary" @onclick="DecrementServesMissed">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementAces">+</button>
                <button class="btn btn-primary" @onclick="DecrementAces">-</button>
            </td>
        </tr>
    </table>
}
else
{
    <table align="center">
        <tr align="center">
            <th>Kills</th>
            <th>Attack Errors</th>
            <th>Attack Attempts</th>
        </tr>
        <tr align="center">
            <td>@SetPlayer.AttackStats.Kills</td>
            <td>@SetPlayer.AttackStats.Attempts</td>
            <td>@SetPlayer.AttackStats.Errors</td>
        </tr>
        <tr align="center">
            <td>
                <button class="btn btn-primary" @onclick="IncrementKills">+</button>
                <button class="btn btn-primary" @onclick="DecrementKills">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementAttempts">+</button>
                <button class="btn btn-primary" @onclick="DecrementAttempts">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementErrors">+</button>
                <button class="btn btn-primary" @onclick="DecrementErrors">-</button>
            </td>
        </tr>
        <tr align="center">
            <th>Digs</th>
            <th>Ball Touched</th>
            <th>Ball Missed</th>
        </tr>
        <tr align="center">
            <td>@SetPlayer.PassStats.Digs</td>
            <td>@SetPlayer.PassStats.BallTouches</td>
            <td>@SetPlayer.PassStats.BallMisses</td>
        </tr>
        <tr align="center">
            <td>
                <button class="btn btn-primary" @onclick="IncrementDigs">+</button>
                <button class="btn btn-primary" @onclick="DecrementDigs">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementBallTouches">+</button>
                <button class="btn btn-primary" @onclick="DecrementBallTouches">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementBallMisses">+</button>
                <button class="btn btn-primary" @onclick="DecrementBallTouches">-</button>
            </td>
        </tr>
        <tr align="center">
            <th>Kill Blocks</th>
            <th>Block Touches</th>
            <th>Block Errors</th>
        </tr>
        <tr align="center">
            <td>@SetPlayer.BlockStats.KillBlocks</td>
            <td>@SetPlayer.BlockStats.Touches</td>
            <td>@SetPlayer.BlockStats.BlockErrors</td>
        </tr>
        <tr align="center">
            <td>
                <button class="btn btn-primary" @onclick="IncrementKillBlocks">+</button>
                <button class="btn btn-primary" @onclick="DecrementKillBlocks">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementTouches">+</button>
                <button class="btn btn-primary" @onclick="DecrementTouches">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementBlockErrors">+</button>
                <button class="btn btn-primary" @onclick="DecrementBlockErrors">-</button>
            </td>
        </tr>
        <tr align="center">
            <th>Serves Made</th>
            <th>Serves Missed</th>
            <th>Aces</th>
        </tr>
        <tr align="center">
            <td>@SetPlayer.ServeStats.ServesMade</td>
            <td>@SetPlayer.ServeStats.ServesMissed</td>
            <td>@SetPlayer.ServeStats.Aces</td>
        </tr>
        <tr align="center">
            <td>
                <button class="btn btn-primary" @onclick="IncrementServesMade">+</button>
                <button class="btn btn-primary" @onclick="DecrementServesMade">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementServesMade">+</button>
                <button class="btn btn-primary" @onclick="DecrementServesMade">-</button>
            </td>
            <td>
                <button class="btn btn-primary" @onclick="IncrementAces">+</button>
                <button class="btn btn-primary" @onclick="DecrementAces">-</button>
            </td>
        </tr>
    </table>
}
}
@code {
    [Parameter]
    public SetOverviewPlayer SetPlayer { get; set; }

    public bool isShowing { get; set; }

    public void Open()
    {
        isShowing = true;
    }
    public void Close()
    {
        isShowing = false;
    }

    public void IncrementKills()
    {
        int temp = SetPlayer.AttackStats.Kills;
        SetOverviewAttacks newAttacks = SetPlayer.AttackStats with { Kills = temp + 1 };
        SetPlayer = SetPlayer with { AttackStats = newAttacks};
    }
    public void DecrementKills()
    {
        int temp = SetPlayer.AttackStats.Kills;
        SetOverviewAttacks newAttacks = SetPlayer.AttackStats with { Kills = temp - 1 };
        SetPlayer = SetPlayer with { AttackStats = newAttacks };
    }
    public void IncrementAttempts()
    {
        int temp = SetPlayer.AttackStats.Attempts;
        SetOverviewAttacks newAttacks = SetPlayer.AttackStats with { Attempts = temp + 1 };
        SetPlayer = SetPlayer with { AttackStats = newAttacks };
    }
    public void DecrementAttempts()
    {
        int temp = SetPlayer.AttackStats.Attempts;
        SetOverviewAttacks newAttacks = SetPlayer.AttackStats with { Attempts = temp - 1 };
        SetPlayer = SetPlayer with { AttackStats = newAttacks };
    }
    public void IncrementErrors()
    {
        int temp = SetPlayer.AttackStats.Errors;
        SetOverviewAttacks newAttacks = SetPlayer.AttackStats with { Errors = temp + 1 };
        SetPlayer = SetPlayer with { AttackStats = newAttacks };
    }
    public void DecrementErrors()
    {
        int temp = SetPlayer.AttackStats.Errors;
        SetOverviewAttacks newAttacks = SetPlayer.AttackStats with { Errors = temp - 1 };
        SetPlayer = SetPlayer with { AttackStats = newAttacks };
    }
    public void IncrementKillBlocks()
    {
        int temp = SetPlayer.BlockStats.KillBlocks;
        SetOverviewBlocks newBlocks = SetPlayer.BlockStats with { KillBlocks = temp + 1 };
        SetPlayer = SetPlayer with { BlockStats = newBlocks };
    }
    public void DecrementKillBlocks()
    {
        int temp = SetPlayer.BlockStats.KillBlocks;
        SetOverviewBlocks newBlocks = SetPlayer.BlockStats with { KillBlocks = temp - 1 };
        SetPlayer = SetPlayer with { BlockStats = newBlocks };
    }
    public void IncrementTouches()
    {
        int temp = SetPlayer.BlockStats.Touches;
        SetOverviewBlocks newBlocks = SetPlayer.BlockStats with { Touches = temp + 1 };
        SetPlayer = SetPlayer with { BlockStats = newBlocks };
    }
    public void DecrementTouches()
    {
        int temp = SetPlayer.BlockStats.Touches;
        SetOverviewBlocks newBlocks = SetPlayer.BlockStats with { Touches = temp - 1 };
        SetPlayer = SetPlayer with { BlockStats = newBlocks };
    }
    public void IncrementBlockErrors()
    {
        int temp = SetPlayer.BlockStats.BlockErrors;
        SetOverviewBlocks newBlocks = SetPlayer.BlockStats with { BlockErrors = temp + 1 };
        SetPlayer = SetPlayer with { BlockStats = newBlocks };
    }
    public void DecrementBlockErrors()
    {
        int temp = SetPlayer.BlockStats.BlockErrors;
        SetOverviewBlocks newBlocks = SetPlayer.BlockStats with { BlockErrors = temp - 1 };
        SetPlayer = SetPlayer with { BlockStats = newBlocks };
    }
    public void IncrementDigs()
    {
        int temp = SetPlayer.PassStats.Digs;
        SetOverviewPasses newPasses = SetPlayer.PassStats with { Digs = temp + 1 };
        SetPlayer = SetPlayer with { PassStats = newPasses };
    }
    public void DecrementDigs()
    {
        int temp = SetPlayer.PassStats.Digs;
        SetOverviewPasses newPasses = SetPlayer.PassStats with { Digs = temp - 1 };
        SetPlayer = SetPlayer with { PassStats = newPasses };
    }
    public void IncrementBallTouches()
    {
        int temp = SetPlayer.PassStats.BallTouches;
        SetOverviewPasses newPasses = SetPlayer.PassStats with { BallTouches = temp + 1 };
        SetPlayer = SetPlayer with { PassStats = newPasses };
    }
    public void DecrementBallTouches()
    {
        int temp = SetPlayer.PassStats.BallTouches;
        SetOverviewPasses newPasses = SetPlayer.PassStats with { BallTouches = temp - 1 };
        SetPlayer = SetPlayer with { PassStats = newPasses };
    }
    public void IncrementBallMisses()
    {
        int temp = SetPlayer.PassStats.BallMisses;
        SetOverviewPasses newPasses = SetPlayer.PassStats with { BallMisses = temp + 1 };
        SetPlayer = SetPlayer with { PassStats = newPasses };
    }
    public void DecrementBallMisses()
    {
        int temp = SetPlayer.PassStats.BallMisses;
        SetOverviewPasses newPasses = SetPlayer.PassStats with { BallMisses = temp - 1 };
        SetPlayer = SetPlayer with { PassStats = newPasses };
    }
    public void IncrementAces()
    {
        int temp = SetPlayer.ServeStats.Aces;
        SetOverviewServe newServes = SetPlayer.ServeStats with { Aces = temp + 1 };
        SetPlayer = SetPlayer with { ServeStats = newServes };
    }
    public void DecrementAces()
    {
        int temp = SetPlayer.ServeStats.Aces;
        SetOverviewServe newServes = SetPlayer.ServeStats with { Aces = temp - 1 };
        SetPlayer = SetPlayer with { ServeStats = newServes };
    }
    public void IncrementServesMade()
    {
        int temp = SetPlayer.ServeStats.ServesMade;
        SetOverviewServe newServes = SetPlayer.ServeStats with { ServesMade = temp + 1 };
        SetPlayer = SetPlayer with { ServeStats = newServes };
    }
    public void DecrementServesMade()
    {
        int temp = SetPlayer.ServeStats.ServesMade;
        SetOverviewServe newServes = SetPlayer.ServeStats with { ServesMade = temp - 1 };
        SetPlayer = SetPlayer with { ServeStats = newServes };
    }
    public void IncrementServesMissed()
    {
        int temp = SetPlayer.ServeStats.ServesMissed;
        SetOverviewServe newServes = SetPlayer.ServeStats with { ServesMissed = temp + 1 };
        SetPlayer = SetPlayer with { ServeStats = newServes };
    }
    public void DecrementServesMissed()
    {
        int temp = SetPlayer.ServeStats.ServesMissed;
        SetOverviewServe newServes = SetPlayer.ServeStats with { ServesMissed = temp - 1 };
        SetPlayer = SetPlayer with { ServeStats = newServes };
    }
}
